varying in vec4 MCvertex;

varying out vec2 pointCenter;        
varying out vec4 color;              
varying out float brightness;

uniform mat4 MVPMatrix;
uniform mat4 MVMatrix;

uniform vec2 viewportSize;       
uniform vec2 viewportCoord;

uniform vec4 AmbientMaterial;
    
//uniform float Llim;              
//uniform float Lsat;              
uniform float magScale;   
       
uniform float sigma2;            
uniform float glareFalloff;      
uniform float glareBrightness;   
uniform float exposure;          
uniform float thresholdBrightness;
void main()                      
{                                
    vec4 position = MCvertex;                                               
    float appMag = position.z;                                               
    position.z = sqrt(1.0 - dot(position.xy, position.xy)) * sign(AmbientMaterial.a - 0.5);
    vec4 projectedPosition = MVPMatrix * MVMatrix * position;
    vec2 devicePosition = projectedPosition.xy / projectedPosition.w;        
    pointCenter = (devicePosition * 0.5 + vec2(0.5, 0.5)) * viewportSize + viewportCoord;    
    color = AmbientMaterial;                                                        
    float b = pow(2.512, -appMag * magScale);
    float r2 = -log(thresholdBrightness / (exposure * b)) * 2.0 * sigma2;          
    float rGlare2 = (exposure * glareBrightness * b / thresholdBrightness - 1.0) / glareFalloff;     
    gl_PointSize = 2.0 * sqrt(max(r2, rGlare2));                             

    brightness = b;                                                          
    gl_Position = projectedPosition;                                         
}